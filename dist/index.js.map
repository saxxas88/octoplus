{"version":3,"file":"index.js","mappings":"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","sources":["webpack://express-proxy-react/./server/config/placeholder.js","webpack://express-proxy-react/external commonjs \"axios\"","webpack://express-proxy-react/external commonjs \"body-parser\"","webpack://express-proxy-react/external commonjs \"cheerio\"","webpack://express-proxy-react/external commonjs \"colors\"","webpack://express-proxy-react/external commonjs \"cors\"","webpack://express-proxy-react/external commonjs \"crypto-js\"","webpack://express-proxy-react/external commonjs \"dotenv\"","webpack://express-proxy-react/external commonjs \"express\"","webpack://express-proxy-react/external commonjs \"express-http-proxy\"","webpack://express-proxy-react/external commonjs \"puppeteer-extra\"","webpack://express-proxy-react/external commonjs \"puppeteer-extra-plugin-click-and-wait\"","webpack://express-proxy-react/external commonjs \"puppeteer-extra-plugin-stealth\"","webpack://express-proxy-react/external commonjs \"puppeteer-real-browser\"","webpack://express-proxy-react/external node-commonjs \"node:https\"","webpack://express-proxy-react/external node-commonjs \"node:url\"","webpack://express-proxy-react/external node-commonjs \"path\"","webpack://express-proxy-react/webpack/bootstrap","webpack://express-proxy-react/./server/index.js"],"sourcesContent":["const message = `Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc venenatis pharetra velit. Nunc eleifend pharetra posuere. Proin id odio et est tincidunt accumsan. Cras porttitor egestas justo, vitae fermentum urna. Vestibulum sed lobortis lacus, faucibus cursus velit. Nullam a purus ut neque interdum tincidunt. Phasellus ut tellus velit. Morbi feugiat tellus in ipsum malesuada maximus.\r\n\r\nDonec ac imperdiet sapien. Fusce risus metus, ullamcorper sed fringilla nec, finibus sit amet dolor. Maecenas orci lacus, tristique et tincidunt vitae, porta nec sem. Sed ut turpis odio. Curabitur interdum, lacus vel semper auctor, purus sapien commodo nunc, vel commodo lacus dui id nisl. Proin elit diam, feugiat sit amet efficitur elementum, bibendum tristique nisi. Morbi id diam ornare, condimentum ipsum vel, pulvinar purus. Sed bibendum, nibh rhoncus consectetur pulvinar, urna ligula sagittis nunc, vel gravida elit erat ut eros. Duis facilisis, nibh vitae cursus ullamcorper, tortor ex laoreet leo, vel maximus mi eros non orci. Fusce pharetra bibendum nisi, sed mattis libero malesuada nec.\r\n\r\nInteger et tempor libero, in sollicitudin augue. Cras nec turpis scelerisque lectus commodo pharetra at mattis nunc. Aenean dictum, diam at posuere egestas, ligula sem fringilla augue, in lacinia tortor mi ac nunc. Vestibulum posuere sapien vitae venenatis rhoncus. Nullam fringilla orci eros, id laoreet nisl consectetur et. Curabitur tortor neque, imperdiet quis eleifend ac, ullamcorper vel risus. Ut sodales sollicitudin metus malesuada sodales.\r\n\r\nNullam efficitur, diam in posuere egestas, arcu urna interdum ligula, id aliquam enim odio euismod nulla. Vestibulum tristique efficitur dolor, sed euismod nibh euismod a. Donec efficitur fringilla nisi. Pellentesque sit amet lorem nec purus laoreet condimentum tristique ut libero. Curabitur et varius risus, in cursus felis. Duis tristique vestibulum eros ac ultrices. Integer leo ipsum, suscipit a lorem eget, imperdiet interdum ex. In eget quam sapien. Fusce tempus mi eu nulla aliquam, vitae varius est congue. Suspendisse consectetur eros ipsum, quis accumsan nisi lobortis sed. Nam volutpat nisi id velit molestie mattis. Nunc efficitur erat at sodales maximus.\r\n\r\nVestibulum at orci ac neque blandit vehicula ac id lacus. Pellentesque vulputate pharetra consectetur. Morbi commodo porta lacus eu commodo. Donec urna augue, consequat eget mollis et, feugiat non lorem. Suspendisse sed libero at arcu semper sagittis sit amet ut leo. Vivamus elit ligula, dignissim vel convallis et, suscipit et nisl. Vestibulum volutpat, nisl at finibus tristique, lacus odio sollicitudin mi, ut aliquet ligula ex in nibh.`;\r\n\r\nmodule.exports = {\r\n    message\r\n}","module.exports = require(\"axios\");","module.exports = require(\"body-parser\");","module.exports = require(\"cheerio\");","module.exports = require(\"colors\");","module.exports = require(\"cors\");","module.exports = require(\"crypto-js\");","module.exports = require(\"dotenv\");","module.exports = require(\"express\");","module.exports = require(\"express-http-proxy\");","module.exports = require(\"puppeteer-extra\");","module.exports = require(\"puppeteer-extra-plugin-click-and-wait\");","module.exports = require(\"puppeteer-extra-plugin-stealth\");","module.exports = require(\"puppeteer-real-browser\");","module.exports = require(\"node:https\");","module.exports = require(\"node:url\");","module.exports = require(\"path\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","const express = require(\"express\");\r\nconst path = require(\"path\");\r\nrequire(\"dotenv\").config({ path: path.resolve(__dirname, \"..\", \".env\") });\r\nconst bodyParser = require(\"body-parser\");\r\nconst cors = require(\"cors\");\r\nconst https = require(\"node:https\");\r\nconst url = require(\"node:url\");\r\nconst proxy = require(\"express-http-proxy\");\r\nconst colors = require(\"colors\");\r\nconst axios = require(\"axios\");\r\nconst cheerio = require('cheerio')\r\n/* const puppeteer = require(\"puppeteer\"); */\r\nconst puppeteer = require(\"puppeteer-extra\");\r\nconst stealthPlugin = require(\"puppeteer-extra-plugin-stealth\");\r\nconst { connect } = require('puppeteer-real-browser');\r\nconst CryptoJS = require(\"crypto-js\");\r\nconst PORT = process.env.PORT_SERVER || 3001;\r\nconst { message } = require(\"./config/placeholder\");\r\nconst app = express();\r\n\r\nconst host = process.env.HOST || \"0.0.0.0\";\r\nconst port = PORT || 8080;\r\nconst web_server_url = process.env.PUBLIC_URL || `http://${host}:${port}`;\r\nconst defaultTimeout = 35000;\r\nconst allowlist = process.env.WHITELIST;\r\nlet m3u8List;\r\nlet headersID;\r\n\r\n/* puppeteer.use(stealthPlugin({ userAgentRotationInterval: 5000 })); */\r\n\r\nconst corsOptionsDelegate = function (req, callback) {\r\n  let corsOptions;\r\n  if (allowlist.indexOf(req.header(\"Origin\")) !== -1) {\r\n    corsOptions = { origin: true }; // reflect (enable) the requested origin in the CORS response\r\n  } else {\r\n    corsOptions = { origin: false }; // disable CORS for this request\r\n  }\r\n  callback(null, corsOptions); // callback expects two parameters: error and options\r\n};\r\n\r\n/* app.use(cors(corsOptionsDelegate)) */\r\napp.use(\"/proxyEurostreamingImg\", proxy(\"https://eurostreaming.my\"));\r\napp.use(\"/proxyAltadefinizioneImg\", proxy(\"https://altadefinizione.now/\"));\r\napp.use(\"/alta\", proxy(\"https://eurostreaming.my\"));\r\n\r\napp.use(bodyParser.json());\r\napp.use(express.static(path.resolve(__dirname, \"../dist/client\")));\r\n\r\nconst detectElementNode = (\r\n  data,\r\n  period = 500,\r\n  breakTimeout = 35000,\r\n  fnTest = null\r\n) => {\r\n  let breakPoint;\r\n  if (breakTimeout) setTimeout(() => (breakPoint = true), breakTimeout);\r\n  return new Promise((resolve, reject) => {\r\n    const interval = setInterval(async () => {\r\n      try {\r\n        console.log(breakPoint, data.m3u8List, m3u8List);\r\n        if (\r\n          (data.m3u8List && data.headersID) ||\r\n          (m3u8List && headersID) ||\r\n          (fnTest !== null && fnTest())\r\n        ) {\r\n          clearInterval(interval);\r\n          resolve(1);\r\n        }\r\n        if (breakPoint === true) {\r\n          clearInterval(interval);\r\n          resolve(2);\r\n        }\r\n        // keep on waiting\r\n      } catch (error) {\r\n        clearInterval(interval);\r\n        reject(Error(\"failz\"));\r\n      }\r\n    }, period);\r\n  });\r\n};\r\n\r\nasync function openSerie(params) {\r\n  let browser,\r\n    page,\r\n    checkResult,\r\n    resultSeason,\r\n    resultEpisode,\r\n    objSerie = [];\r\n  const { pageLink } = params;\r\n  let events_list = [];\r\n  try {\r\n    browser = await puppeteer.launch({ headless: \"new\" });\r\n    page = await browser.newPage();\r\n    //open page\r\n    await page.goto(pageLink, { waitUntil: \"networkidle2\" });\r\n    /* seasons */\r\n    // search elements\r\n    checkResult = await page\r\n      .waitForSelector(\".serie-menu .tt_season ul li a\",{timeout:defaultTimeout})\r\n      .then((el) => el)\r\n      .catch((err) => false);\r\n    if (!checkResult) throw new Error(\"Missing seasons\");\r\n    // get elements\r\n    checkResult = await page\r\n      .$$eval(\".serie-menu .tt_season ul li a\", (els) => {\r\n        return Array.from(els).map((el) => {\r\n          return { num: el.innerText, href: el.href.split(\"#\")[1] };\r\n        });\r\n      })\r\n      .catch((err) => false);\r\n    if (!checkResult) throw new Error(\"Data seasons incomplete\");\r\n    resultSeason = checkResult;\r\n    /* episodes */\r\n    // search elements\r\n    checkResult = await page\r\n      .waitForSelector(`.serie-menu .tt_series .tab-pane ul li`,{timeout:defaultTimeout})\r\n      .then((el) => el)\r\n      .catch((err) => false);\r\n    if (!checkResult) throw new Error(\"Missing episodes\");\r\n  \r\n    for (let season of resultSeason) {\r\n      // episodes\r\n      let episodes = await page\r\n        .$$eval(\r\n          `.serie-menu .tt_series .tab-pane#${season?.href} ul li`,\r\n          (els) => {\r\n            return Array.from(els).map((el) => {\r\n              let elem = {};\r\n              const tempList = el.querySelectorAll(\"a[data-title]\");\r\n              if(tempList)\r\n              {elem = Object.assign(\r\n                {},\r\n                Array.from(tempList).map((tel) => {\r\n                  return {\r\n                    serie: tel?.id,\r\n                    title: tel?.dataset?.title,\r\n                    num: tel?.dataset?.num,\r\n                  };\r\n                })\r\n              )[0];\r\n            }\r\n              if(!elem)\r\n              elem = {\r\n                serie: false,\r\n                title: false,\r\n                num: false,\r\n              }\r\n            \r\n              const tempSubList = el.querySelectorAll(\".mirrors a.mr\");\r\n              if(elem && tempSubList)\r\n              elem.links = Object.assign(\r\n                {},\r\n                Array.from(tempSubList).map((tsel) => {\r\n                  return { host: tsel?.dataset?.m, link: tsel?.dataset?.link };\r\n                })\r\n              );\r\n              else{\r\n                elem.links = []\r\n              }\r\n              return elem;\r\n            });\r\n          }\r\n        )\r\n        .catch((err) =>  false);\r\n   \r\n      if (episodes) {\r\n        objSerie.push({ season, episodes });\r\n      }\r\n    }\r\n    page.close();\r\n    events_list = objSerie ? objSerie : [\"false\"];\r\n\r\n    return { events_list };\r\n  } catch (error) {\r\n    page?.close();\r\n    console.log(\"scrapeEvents::ERROR->\", error);\r\n    return false;\r\n  } finally {\r\n    browser?.close();\r\n  }\r\n}\r\nasync function openFilm(params) {\r\n  let browser, page, checkResult, resultLinks;\r\n  objFilm = [];\r\n  const { pageLink } = params;\r\n  let events_list = [];\r\n  try {\r\n    browser = await puppeteer.launch({\r\n      headless: \"new\",\r\n      args: [\r\n        \"--no-sandbox\",\r\n        \"--disable-setuid-sandbox\",\r\n        \"--user-agent=Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.132 Safari/537.36\",\r\n      ],\r\n    });\r\n    page = await browser.newPage();\r\n    //open page\r\n    await page.goto(pageLink, { waitUntil: \"networkidle2\" });\r\n\r\n    checkResult = await page\r\n      .waitForSelector(`iframe[src*=\"mostra\"]`,{timeout:defaultTimeout})\r\n      .then((el) => el)\r\n      .catch((err) => false);\r\n    if (!checkResult) throw new Error(\"Missing iframe\");\r\n    // get elements\r\n    checkResult = await page\r\n      .$eval(`iframe[src*=\"mostra\"]`, (el) => {\r\n        return el?.src;\r\n      })\r\n      .catch((err) => false);\r\n    if (!checkResult) throw new Error(\"Missing iframe src\");\r\n    // search elements\r\n    //open page\r\n    await page.goto(checkResult, { waitUntil: \"networkidle2\" });\r\n    checkResult = await page\r\n      .waitForSelector(\"li[data-link]\",{timeout:defaultTimeout})\r\n      .then((el) => el)\r\n      .catch((err) => false);\r\n    if (!checkResult) throw new Error(\"Missing links\");\r\n    // get elements\r\n    checkResult = await page\r\n      .$$eval(\"li[data-link]\", (els) => {\r\n        return Array.from(els).map((el) => {\r\n          const data_link =\r\n            el?.dataset?.link && !el?.dataset?.link?.includes(\"http\")\r\n              ? `https:${el?.dataset?.link}`\r\n              : el?.dataset?.link;\r\n          return { data_link };\r\n        });\r\n      })\r\n      .catch((err) => false);\r\n\r\n    resultLinks = checkResult;\r\n\r\n    if (!checkResult) throw new Error(\"Missing links\");\r\n\r\n    for (let link of resultLinks) {\r\n      if (\r\n        link?.data_link?.includes(\"supervideo\") ||\r\n        link?.data_link?.includes(\"dropload\")\r\n      ) {\r\n        objFilm.push({ link: link?.data_link });\r\n      }\r\n    }\r\n    page.close();\r\n    events_list = objFilm ? objFilm : [\"false\"];\r\n\r\n    return { events_list };\r\n  } catch (error) {\r\n    page?.close();\r\n    console.log(\"scrapeEvents::ERROR->\", error);\r\n    return false;\r\n  } finally {\r\n    browser?.close();\r\n  }\r\n}\r\n\r\n  async function scrapeSeries(value) {\r\n    let browser, page, result;\r\n    let events_list = [];\r\n    try {\r\n     /*  browser = await puppeteer.launch();\r\n      page = await browser.newPage(); */\r\n      const { page, browser } = await connect({\r\n     /*    args: [\"--start-maximized\"], */\r\n        turnstile: true,\r\n        headless: \"new\",\r\n        disableXvfb: true,\r\n        customConfig: {},\r\n        connectOption: {\r\n            defaultViewport: null\r\n        },\r\n        plugins: [\r\n            require('puppeteer-extra-plugin-click-and-wait')()\r\n        ]\r\n    })\r\n\r\n      await page.setViewport({ width: 1920, height: 1080 });\r\n  \r\n       await page.setUserAgent(\r\n        'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/114.0.0.0 Safari/537.36'\r\n      ); \r\n  \r\n      await  page.goto(\r\n        `https://eurostreaming.my/index.php?do=search&story=${value}&subaction=search`,\r\n        {\r\n           waitUntil: 'load'\r\n        }\r\n      );\r\n       \r\n      result = await page\r\n      .waitForSelector(\".list.post.type-post.status-publish\",{timeout:defaultTimeout})\r\n      .then((el) => true)\r\n      .catch((err) => false)\r\n      \r\n      console.log('------111',result)\r\n\r\n      let resulto = await page\r\n      .$eval(\"body\", (els) => {\r\n        return els.innerText;});\r\n    console.log('resulto',resulto);\r\n    \r\n      result = await page\r\n        .$$eval(\".list.post.type-post.status-publish\", (els) => {\r\n          return Array.from(els).map((el) => {\r\n            let elem = {};\r\n  \r\n            const nodeImg = el?.querySelector(\".post-thumb img\");\r\n            elem.img = nodeImg ? nodeImg?.src : false;\r\n            elem.alt = nodeImg ? nodeImg?.alt : false;\r\n            const nodeTitle = el?.querySelector(\".post-content a\");\r\n            elem.title = nodeTitle ? nodeTitle?.title : false;\r\n            elem.pageLink = nodeImg ? nodeTitle?.href : false;\r\n            return elem;\r\n          });\r\n        })\r\n        .catch((err) => {\r\n          console.log(err.message);\r\n          return false;\r\n        });\r\n      \r\n     console.log('------',JSON.stringify(result))\r\n      if (!result) throw new Error(\"Missing serie Tv\");\r\n      else console.log('SERIES OK')\r\n      // get list\r\n     /*  result = await page\r\n        .$$eval(\".list.post.type-post.status-publish\", (els) => {\r\n          return Array.from(els).map((el) => {\r\n            let elem = {};\r\n  \r\n            const nodeImg = el?.querySelector(\".post-thumb img\");\r\n            elem.img = nodeImg ? nodeImg?.src : false;\r\n            elem.alt = nodeImg ? nodeImg?.alt : false;\r\n            const nodeTitle = el?.querySelector(\".post-content a\");\r\n            elem.title = nodeTitle ? nodeTitle?.title : false;\r\n            elem.pageLink = nodeImg ? nodeTitle?.href : false;\r\n            return elem;\r\n          });\r\n        })\r\n        .catch((err) => {\r\n          console.log(err.message);\r\n          return false;\r\n        }); */\r\n      /* console.log(\"list\", result); */\r\n  \r\n      page.close();\r\n      events_list = result ? result : [\"false\"];\r\n      console.log('END')\r\n      \r\n      return { events_list };\r\n    } catch (error) {\r\n      page?.close();\r\n      console.log(\"scrapeEvents::ERROR->\", error);\r\n      return [\"false\"];\r\n    } finally {\r\n      browser?.close();\r\n    }\r\n  }\r\n\r\nasync function scrapeSeriesHuman(value) {\r\n  let browser, page, result;\r\n  let events_list = [];\r\n  try {\r\n    \r\n    browser = await puppeteer.launch({\r\n      headless: \"new\",\r\n       args: [\r\n        \"--no-sandbox\",\r\n        \"--disable-setuid-sandbox\",\r\n        \"--user-agent=Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/119.0.0.0 Safari/537.36\",\r\n      ], \r\n    });\r\n    page = await browser.newPage();\r\n\r\n    /* await page.goto(\"https://eurostreaming.my\", {\r\n      waitUntil: \"networkidle2\",\r\n    }); */\r\n    //search input text\r\n    /* result = await page\r\n      .waitForSelector(\"input#story\",{timeout:defaultTimeout})\r\n      .then((el) => el)\r\n      .catch((err) => {console.log(\"search input\",err.message);return false});\r\n    console.log(\"search input\", result);\r\n    // set value to search\r\n    if(!result)\r\n      throw new Error('Missing title')\r\n    result = await page\r\n      .$eval(\"input#story\", (el, value) => (el.value = value), value)\r\n      .catch((err) => {console.log(\"set value to search\", err.message);return false});\r\n    console.log(\"set value to search\", result);\r\n    //search form submit\r\n    result = await page\r\n      .waitForSelector('form[role=\"search\"]',{timeout:defaultTimeout})\r\n      .then((el) => el)\r\n      .catch((err) => {console.log(\"set value to search\", err.message);return false});\r\n    console.log(\"search form submit\", result);\r\n\r\n    if(!result)\r\n      throw new Error('Missing title')\r\n    // click submit\r\n    result = await page\r\n      .$eval('form[role=\"search\"]', (el) => el.submit())\r\n      .catch((err) => err.message);\r\n    console.log(\"click submit\", result); */\r\n\r\n    //search result list\r\n   /*  result = await page\r\n      .waitForSelector(\".list.post.type-post.status-publish\",{timeout:defaultTimeout})\r\n      .then((el) => el)\r\n      .catch((err) => false);\r\n */\r\n\r\n      await page.setExtraHTTPHeaders({\r\n        'Accept-Language': 'en-US,en;q=0.9',\r\n        'Referer': 'https://eurostreaming.my/',\r\n        });\r\n\r\n    await  page.goto(\r\n        `https://eurostreaming.my/?story=${value}&do=search&subaction=search&titleonly=3`,\r\n        {\r\n          waitUntil: \"networkidle2\",\r\n        }\r\n      );\r\n      await page.mouse.move(100, 200); await page.mouse.move(150, 250, { steps: 10 }); \r\n   \r\n    let y = await page.$$eval('.list.post.type-post.status-publish',(els)=>els?.length).catch(err=>'errore');\r\n    console.log('thumn',y)\r\n    let z = await page.$eval('body',(els)=>els?.innerText).catch(err=>'errore');\r\n    console.log('body',z)\r\n    result = await Promise.race([\r\n      new Promise((resolve, reject) => { page\r\n      .waitForSelector(\".list.post.type-post.status-publish\",{timeout:defaultTimeout})\r\n      .then((el) => resolve(el))\r\n      .catch((err) => resolve(false))\r\n      }),\r\n      new Promise((resolve, reject) => { page\r\n      .waitForSelector(\"#content .post-entry h3\",{timeout:defaultTimeout})\r\n      .then((el) => resolve(false))\r\n      .catch((err) => resolve(true))\r\n    })\r\n    ]);\r\n\r\n\r\n    console.log(\"search result list\", result);\r\n    if (!result) throw new Error(\"Missing serie Tv\");\r\n    // get list\r\n    result = await page\r\n      .$$eval(\".list.post.type-post.status-publish\", (els) => {\r\n        return Array.from(els).map((el) => {\r\n          let elem = {};\r\n\r\n          const nodeImg = el?.querySelector(\".post-thumb img\");\r\n          elem.img = nodeImg ? nodeImg?.src : false;\r\n          elem.alt = nodeImg ? nodeImg?.alt : false;\r\n          const nodeTitle = el?.querySelector(\".post-content a\");\r\n          elem.title = nodeTitle ? nodeTitle?.title : false;\r\n          elem.pageLink = nodeImg ? nodeTitle?.href : false;\r\n          return elem;\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        console.log(err.message);\r\n        return false;\r\n      });\r\n    console.log(\"list\", result);\r\n\r\n    page.close();\r\n    events_list = result ? result : [\"false\"];\r\n\r\n    return { events_list };\r\n  } catch (error) {\r\n    page?.close();\r\n    console.log(\"scrapeEvents::ERROR->\", error);\r\n    return [\"false\"];\r\n  } finally {\r\n    browser?.close();\r\n  }\r\n}\r\n\r\nasync function scrapeFilms(value) {\r\n  let browser, page, result;\r\n  let events_list = [];\r\n  try {\r\n    browser = await puppeteer.launch({\r\n      headless: 'new',\r\n    });\r\n    page = await browser.newPage();\r\n    await page.evaluateOnNewDocument(() => {\r\n      Object.defineProperty(navigator, \"webdriver\", {\r\n        get: () => false,\r\n      });\r\n  });\r\n    \r\n\r\n    await page.goto(\r\n      `https://altadefinizione.now/?story=${value}&do=search&subaction=search&titleonly=3`,\r\n      {\r\n        waitUntil: 'domcontentloaded'\r\n     }\r\n    );\r\n\r\n    await new Promise(r => setTimeout(r, 10000));\r\n\r\n  \r\n    //search result list\r\n /*    result = await page\r\n      .waitForSelector(\".box\",{timeout:defaultTimeout})\r\n      .then((el) => el)\r\n      .catch((err) => err.message);\r\n    console.log(\"search result list\", result); */\r\n\r\n    result = await Promise.race([\r\n      new Promise((resolve, reject) => { page\r\n      .waitForSelector(\".box\",{timeout:defaultTimeout})\r\n      .then((el) => resolve(el))\r\n      .catch((err) => resolve(false))\r\n      }),\r\n      new Promise((resolve, reject) => { page\r\n      .waitForSelector(\".error b\",{timeout:defaultTimeout})\r\n      .then((el) => resolve(false))\r\n      .catch((err) => resolve(true))\r\n    })\r\n    ]);\r\n\r\n   let test = await page\r\n      .$eval(\"body\", (els) => {\r\n        return els.innerText\r\n        }).catch(err=>'ierrore');\r\n     console.log('TESTTTTTTTTT',test) \r\n    if (!result) throw new Error(\"Missing Film\");\r\n    // get list\r\n    result = await page\r\n      .$$eval(\".box\", (els) => {\r\n        return Array.from(els).map((el) => {\r\n          let elem = {};\r\n\r\n          const nodeImg = el?.querySelector(\".wrapperImage a img\");\r\n          elem.img = nodeImg ? nodeImg?.src : false;\r\n          elem.alt = nodeImg ? nodeImg?.alt : false;\r\n          const nodeTitle = el.querySelector(\".wrapperImage .info h2 a\");\r\n          elem.title = nodeTitle ? nodeTitle?.innerText : false;\r\n          elem.pageLink = nodeImg ? nodeTitle?.href : false;\r\n          let infoPlus = el.querySelector(\".wrapperImage .imdb-rate\");\r\n          elem.rate = infoPlus ? infoPlus?.innerText : false;\r\n          infoPlus = el.querySelector(\".title-ntx\");\r\n          elem.genre = infoPlus ? infoPlus?.dataset?.title : false;\r\n          return elem;\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        console.log(err.message);\r\n        return false;\r\n      });\r\n    console.log(\"list\", result);\r\n\r\n    page.close();\r\n    events_list = result ? result : [\"false\"];\r\n\r\n    return { events_list };\r\n  } catch (error) {\r\n    page?.close();\r\n    console.log(\"scrapeFilms::ERROR->\", error);\r\n    return false;\r\n  } finally {\r\n    browser?.close();\r\n  }\r\n}\r\n\r\nasync function scrapeSports(value) {\r\n  let browser, page;\r\n \r\n  try {\r\n    browser = await puppeteer.launch({ headless: \"new\" });\r\n    page = await browser.newPage();\r\n\r\n    await page.goto(\"https://sportsonline.gl/prog.txt\", {\r\n      waitUntil: \"networkidle2\",\r\n    });\r\n    await page.waitForSelector(\"pre\",{timeout:defaultTimeout});\r\n\r\n    const week = [\r\n      \"sunday\",\r\n      \"monday\",\r\n      \"tuesday\",\r\n      \"wednesday\",\r\n      \"thursday\",\r\n      \"friday\",\r\n      \"saturday\",\r\n    ];\r\n\r\n    const preList = await page.$eval(\"pre\", (el) => el?.innerText);\r\n   \r\n\r\n    let preListSplitted = preList?.split(\"\\t\\t\\n\");\r\n    if(Array.isArray(preListSplitted) && preListSplitted.length > 1) preListSplitted = preListSplitted.at(-1)\r\n \r\n    preListSplitted = preListSplitted?.split(\"\\n\\n\");\r\n\r\n    const partList = [];\r\n    for (let ls of preListSplitted) {\r\n      if (\r\n        !ls?.startsWith(\"  \") &&\r\n        !ls?.startsWith(\"*\") &&\r\n        !ls?.startsWith(\"==\")\r\n      )\r\n        partList.push(ls);\r\n    }\r\n\r\n    let groups = [];\r\n    let group = false;\r\n    for (let el of partList) {\r\n      let existDay = week.find((w) => el?.toLowerCase().startsWith(w));\r\n      if (existDay) {\r\n        if (group) groups.push(group);\r\n        group = {};\r\n        group.day = existDay;\r\n      }\r\n      let isChannel = !el.includes(\":\");\r\n      if (isChannel) {\r\n        el = el.replace(group?.day?.toUpperCase(), \"\");\r\n        group.channels = group.channels ? group.channels + \"\\n\" + el : el;\r\n      } else group.events = el;\r\n    }\r\n\r\n    //last group\r\n    if (group) groups.push(group);\r\n\r\n    let partGroups = [];\r\n    for (let group of groups) {\r\n      group.channels = group?.channels?.split(\"\\n\");\r\n      if (Array.isArray(group.channels)) {\r\n        let partChannels = group.channels\r\n          .filter((el) => el != \"\")\r\n          .map((el, i) => {\r\n            el = el.split(\" \");\r\n            let channel = false;\r\n            let language = false;\r\n\r\n            if (Array.isArray(el) && el?.length >= 2) {\r\n              channel = el[0];\r\n              language = el[1]?.trim();\r\n            }\r\n\r\n            return { channel, language };\r\n          });\r\n        partChannels.push({ language: \"PORTUGUESE\", channel: \"SPORTTV1\" });\r\n        partChannels.push({ language: \"PORTUGUESE\", channel: \"SPORTTV2\" });\r\n        partChannels.push({ language: \"PORTUGUESE\", channel: \"SPORTTV3\" });\r\n        partChannels.push({ language: \"PORTUGUESE\", channel: \"SPORTTV4\" });\r\n        page = await browser.newPage();\r\n        partChannels = await page.evaluate(\r\n          (params) => {\r\n            const { partChannels } = params;\r\n            return Object.groupBy(partChannels, ({ language }) => language);\r\n          },\r\n          {\r\n            partChannels,\r\n          }\r\n        );\r\n        page.close();\r\n        group.channels = partChannels;\r\n        group.events = group.events.split(\"\\n\");\r\n        let partEvents = group.events.map((ev, i) => {\r\n          let time, link, title;\r\n          try {\r\n            let tmpEv = ev?.split(\"  \");\r\n            time = tmpEv[0];\r\n            title = tmpEv[1]?.split(\"|\")[0]?.trim();\r\n            link = tmpEv[1]?.split(\"|\")[1]?.trim();\r\n            return { time, link, title };\r\n          } catch (err) {\r\n            return { time, link, title };\r\n          }\r\n        });\r\n        if(value && value.trim()!=\"\")\r\n          partEvents = await partEvents.filter(el=>el?.title?.toLowerCase().includes(value?.toLowerCase()))\r\n        group.events = partEvents;\r\n        partGroups.push(group);\r\n      }\r\n    }\r\n\r\n    for (let pt of partGroups) {\r\n      for (let event of pt?.events) {\r\n        let findChannel;\r\n        try {\r\n          for (let [key, value] of Object.entries(pt.channels)) {\r\n            findChannel = value.find((vl) =>\r\n              event.link.includes(vl.channel.toLowerCase())\r\n            );\r\n            if (findChannel) break;\r\n          }\r\n        } catch (err) {}\r\n        if (findChannel) {\r\n          event.channel = findChannel.channel;\r\n          event.language = findChannel.language;\r\n        }\r\n      }\r\n    }\r\n\r\n    /* CHANNELS */\r\n    const CHANNELS = [\r\n      {title:'channels',name:`HD1`,link:`https://v3.sportsonline.si/channels/hd/hd1.php`},\r\n      {title:'channels',name:`HD2`,link:`https://v3.sportsonline.si/channels/hd/hd2.php`},\r\n      {title:'channels',name:`HD3`,link:`https://v3.sportsonline.si/channels/hd/hd3.php`},\r\n      {title:'channels',name:`HD4`,link:`https://v3.sportsonline.si/channels/hd/hd4.php`},\r\n      {title:'channels',name:`HD5`,link:`https://v3.sportsonline.si/channels/hd/hd5.php`},\r\n      {title:'channels',name:`HD6`,link:`https://v3.sportsonline.si/channels/hd/hd6.php`},\r\n      {title:'channels',name:`HD7`,link:`https://v3.sportsonline.si/channels/hd/hd7.php`},\r\n      {title:'channels',name:`HD8`,link:`https://v3.sportsonline.si/channels/hd/hd8.php`},\r\n      {title:'channels',name:`HD9`,link:`https://v3.sportsonline.si/channels/hd/hd9.php`},\r\n      {title:'channels',name:`HD10`,link:`https://v3.sportsonline.si/channels/hd/hd10.php`},\r\n      {title:'channels',name:`HD11`,link:`https://v3.sportsonline.si/channels/hd/hd11.php`},\r\n      {title:'channels',name:`BR1`,link:`https://v3.sportsonline.si/channels/bra/br1.php`},\r\n      {title:'channels',name:`BR2`,link:`https://v3.sportsonline.si/channels/bra/br2.php`},\r\n      {title:'channels',name:`BR3`,link:`https://v3.sportsonline.si/channels/bra/br3.php`},\r\n      {title:'channels',name:`BR4`,link:`https://v3.sportsonline.si/channels/bra/br4.php`},\r\n      {title:'channels',name:`BR5`,link:`https://v3.sportsonline.si/channels/bra/br5.php`},\r\n      {title:'channels',name:`BR6`,link:`https://v3.sportsonline.si/channels/bra/br6.php`},\r\n      {title:'channels',name:`BR7`,link:`https://v3.sportsonline.si/channels/bra/br7.php`},\r\n      {title:'channels',name:`SPORTTV1`,link:`https://v3.sportsonline.si/channels/pt/sporttv1.php`},\r\n      {title:'channels',name:`SPORTTV2`,link:`https://v3.sportsonline.si/channels/pt/sporttv2.php`},\r\n      {title:'channels',name:`SPORTTV3`,link:`https://v3.sportsonline.si/channels/pt/sporttv3.php`},\r\n      {title:'channels',name:`SPORTTV4`,link:`https://v3.sportsonline.si/channels/pt/sporttv4.php`}\r\n\r\n    ]\r\n    \r\n      partGroups.push({day:false,events:CHANNELS})\r\n    /////////////////////////\r\n\r\n    /* NEXT SOURCE */\r\n    page = await browser.newPage();\r\n    let hasSource = await page.goto(\"https://calcio.quest/streaming-gratis-calcio-1.php\", {\r\n      waitUntil: \"networkidle2\",\r\n    })\r\n    .then(res=>true)\r\n    .catch(err=>false);\r\n    if(hasSource){\r\n    let tickets = await page.waitForSelector(\"ul.kode_ticket_list\",{timeout:defaultTimeout})\r\n    .then(tckts=>{\r\n      return tckts.$$eval('li',(els)=>{\r\n        return Array.from(els).map(el=>{\r\n          let event={title:false,time:false,link:false};\r\n          event.title = el.querySelector('.ticket_title')?.innerText;\r\n          event.time = el.querySelector('p')?.innerText;\r\n          event.link=el.querySelector('a')?.href;\r\n          return event;\r\n        })\r\n        \r\n      })\r\n    })\r\n    .then(async tkts=>{\r\n      if(value && value.trim()!=\"\"){\r\n        tkts = await tkts.filter(el=>el?.title?.toLowerCase()?.includes(value?.toLowerCase()))\r\n      }\r\n      return tkts;\r\n    })\r\n    .catch(err=>false);\r\n   if(tickets && partGroups && partGroups.length > 0){\r\n     let getIndexDay = partGroups.findIndex(el=>el.day==week[new Date().getDay()])\r\n      partGroups[getIndexDay].events = partGroups[getIndexDay].events.concat(tickets)\r\n      \r\n   }\r\n  }\r\n    ////////////////////////////\r\n\r\n    const events_list = partGroups;\r\n    page.close();\r\n    \r\n    return { events_list,CHANNELS };\r\n  } catch (error) {\r\n    page?.close();\r\n    console.log(\"scrapeSports::ERROR->\", error);\r\n    return false;\r\n  } finally {\r\n    browser?.close();\r\n  }\r\n}\r\n\r\nasync function scrapeSportA(url) {\r\n  m3u8List = null;\r\n  headersID = null;\r\n  let ob = [];\r\n  let browser, page;\r\n  try {\r\n    browser = await puppeteer.launch({ headless: \"new\" });\r\n    page = await browser.newPage();\r\n\r\n    page.setDefaultNavigationTimeout(35000);\r\n\r\n    await page.tracing.start({\r\n      categories: [\"devtools.\"],\r\n      path: \"./trace.json\",\r\n    });\r\n    page.on(\"request\", (request) => {\r\n      if (request.url().includes(\"/embed/\")) headersID = request.url();\r\n      if (request.url().includes(\"m3u8?\")) m3u8List = request.url();\r\n    });\r\n    await page.goto(url, { waitUntil: \"networkidle2\" });\r\n\r\n    let period = 1000;\r\n    let rd = await detectElementNode({ m3u8List, headersID }, period, 10000);\r\n\r\n    console.log({ m3u8List, headersID: headersID ? headersID : url, rd });\r\n\r\n    return { m3u8List, headersID: headersID ? headersID : url };\r\n  } catch (error) {\r\n    console.log(\"scrapeEvent::ERROR->\", error.message);\r\n    return false;\r\n  } finally {\r\n    browser?.close();\r\n  }\r\n}\r\n\r\nasync function scrapeSportB(url) {\r\n  m3u8List = null;\r\n  headersID= `https://calcio.quest/`;\r\n  let browser, page;\r\n  try {\r\n    browser = await puppeteer.launch({ headless: \"new\" });\r\n    page = await browser.newPage();\r\n\r\n    page.setDefaultNavigationTimeout(35000);\r\n\r\n    await page.tracing.start({\r\n      categories: [\"devtools.\"],\r\n      path: \"./trace.json\",\r\n    });\r\n    page.on(\"request\", (request) => {\r\n     \r\n      if (request.url().includes(\"index.m3u8\")) m3u8List = request.url();\r\n    });\r\n    await page.goto(url, { waitUntil: \"networkidle2\" });\r\n    await page.evaluate(() => {\r\n      try {\r\n        if (player) player?.play();\r\n        return player ? true : false;\r\n      } catch (err) {\r\n        return false;\r\n      }\r\n    });\r\n    let period = 1000;\r\n    let rd = await detectElementNode({ m3u8List }, period, 10000);\r\n\r\n    console.log({ m3u8List, headersID, rd });\r\n\r\n    return { m3u8List, headersID };\r\n  } catch (error) {\r\n    console.log(\"scrapeEvent::ERROR->\", error.message);\r\n    return false;\r\n  } finally {\r\n    browser?.close();\r\n  }\r\n}\r\n\r\nasync function scrapeSerie(url) {\r\n  m3u8List = null;\r\n  headersID = null;\r\n  let ob = [];\r\n\r\n  let browser, page;\r\n  try {\r\n    browser = await puppeteer.launch({\r\n      headless: \"new\",\r\n      args: [\r\n        \"--no-sandbox\",\r\n        \"--disable-setuid-sandbox\",\r\n        \"--user-agent=Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.132 Safari/537.36\",\r\n      ],\r\n    });\r\n    page = await browser.newPage();\r\n\r\n    page.setDefaultNavigationTimeout(35000);\r\n\r\n    const results = []; // collects all results\r\n\r\n    let paused = false;\r\n    let pausedRequests = [];\r\n\r\n   /*  const nextRequest = () => {\r\n      // continue the next request or \"unpause\"\r\n      if (pausedRequests.length === 0) {\r\n        paused = false;\r\n      } else {\r\n        // continue first request in \"queue\"\r\n        pausedRequests.shift()(); // calls the request.continue function\r\n      }\r\n    };\r\n\r\n    await page.setRequestInterception(true); */\r\n\r\n    \r\n  /*  \r\n    page.on(\"request\", (request) => {\r\n     \r\n      if (paused) {\r\n        pausedRequests.push(() => request.continue());\r\n      } else {\r\n        paused = true; // pause, as we are processing a request now\r\n        request.continue();\r\n      }\r\n    });\r\n\r\n    page.on(\"requestfinished\", async (request) => {\r\n      const response = await request.response();\r\n\r\n      const responseHeaders = response.headers();\r\n      const information = {\r\n        url: request.url(),\r\n      };\r\n      results.push(information);\r\n\r\n      nextRequest(); // continue with next request\r\n    });\r\n\r\n    page.on(\"requestfailed\", (request) => {\r\n      // handle failed request\r\n\r\n      nextRequest();\r\n    }); */\r\n\r\n    await page.tracing.start({\r\n      categories: [\"devtools.\"],\r\n      path: \"./trace.json\",\r\n    });\r\n    page.on(\"request\", (request) => {\r\n      if (request.url().includes(\"/embed\")) headersID = request.url();\r\n      if (request.url().includes(\"/master.m3u8\")) m3u8List = request.url();\r\n      if (!headersID && request.url().includes(\"/master.m3u8\")) headersID = request.headers()?.referer;\r\n    });\r\n\r\n    \r\n    await page.goto(url, { waitUntil: \"networkidle2\" });\r\n \r\n    if(!m3u8List){\r\n \r\n      const playerSrc = await page.evaluate(() => {\r\n      \r\n        try {\r\n        \r\n          return player ? player.getConfig().sources[0].file : false;\r\n        } catch (err) {\r\n          return false;\r\n        }\r\n      });\r\n      console.log('Player:',playerSrc)\r\n    if(playerSrc)\r\n          m3u8List = playerSrc\r\n  }\r\n    /* if(!m3u8List && !headersID)\r\n      for (request of results) {\r\n        if (request.url.includes(\"/embed\")) headersID = request.url;\r\n        if (request.url.includes(\"/master.m3u8\")) m3u8List = request.url;\r\n        let period = 1000;\r\n        \r\n      } */\r\n        let period = 1000;\r\n      let rd = await detectElementNode({ m3u8List }, period, 10000);\r\n    console.log({ m3u8List, headersID });\r\n    return { m3u8List, headersID: headersID ? headersID : url };\r\n  } catch (error) {\r\n    console.log(\"scrapeSerie::ERROR->\", error);\r\n    return false;\r\n  } finally {\r\n    page?.close();\r\n    browser?.close();\r\n  }\r\n}\r\n\r\nasync function scrapeFilmold(url) {\r\n  m3u8List = null;\r\n  headersID = null;\r\n  let ob = [];\r\n  let browser, page;\r\n  try {\r\n    browser = await puppeteer.launch({\r\n      headless: \"new\",\r\n      args: [\r\n        \"--no-sandbox\",\r\n        \"--disable-setuid-sandbox\",\r\n        \"--user-agent=Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.132 Safari/537.36\",\r\n      ],\r\n    });\r\n    page = await browser.newPage();\r\n\r\n    page.setDefaultNavigationTimeout(35000);\r\n\r\n    const results = []; // collects all results\r\n\r\n    let paused = false;\r\n    let pausedRequests = [];\r\n\r\n    const nextRequest = () => {\r\n      // continue the next request or \"unpause\"\r\n      if (pausedRequests.length === 0) {\r\n        paused = false;\r\n      } else {\r\n        // continue first request in \"queue\"\r\n        pausedRequests.shift()(); // calls the request.continue function\r\n      }\r\n    };\r\n\r\n    await page.setRequestInterception(true);\r\n\r\n    page.on(\"request\", (request) => {\r\n      if (paused) {\r\n        pausedRequests.push(() => request.continue());\r\n      } else {\r\n        paused = true; // pause, as we are processing a request now\r\n        request.continue();\r\n      }\r\n    });\r\n\r\n    page.on(\"requestfinished\", async (request) => {\r\n      const response = await request.response();\r\n\r\n      const responseHeaders = response.headers();\r\n      const information = {\r\n        url: request.url(),\r\n      };\r\n      results.push(information);\r\n\r\n      nextRequest(); // continue with next request\r\n    });\r\n\r\n    page.on(\"requestfailed\", (request) => {\r\n      // handle failed request\r\n\r\n      nextRequest();\r\n    });\r\n\r\n    await page.goto(url, { waitUntil: \"networkidle2\" });\r\n\r\n    if(!m3u8List){\r\n      const playerSrc = await page.evaluate(() => {\r\n      \r\n        try {\r\n        \r\n          return player ? player.getConfig().sources[0].file : false;\r\n        } catch (err) {\r\n          return false;\r\n        }\r\n      });\r\n      console.log('Player:',playerSrc)\r\n    if(playerSrc)\r\n          m3u8List = playerSrc\r\n  }\r\n\r\n    for (request of results) {\r\n      if (request.url.includes(\"/embed\")) headersID = request.url;\r\n      if (request.url.includes(\"/master.m3u8\")) m3u8List = request.url;\r\n    }\r\n\r\n    console.log({ m3u8List, headersID });\r\n    return { m3u8List, headersID: headersID ? headersID : url };\r\n  } catch (error) {\r\n    console.log(\"scrapeSerie::ERROR->\", error);\r\n    return false;\r\n  } finally {\r\n    page?.close();\r\n    browser?.close();\r\n  }\r\n}\r\nasync function scrapeFilm(url) {\r\n  m3u8List = null;\r\n  headersID = null;\r\n  let ob = [];\r\n  let browser, page;\r\n  try {\r\n    browser = await puppeteer.launch({\r\n      headless: \"new\",\r\n      args: [\r\n        \"--no-sandbox\",\r\n        \"--disable-setuid-sandbox\",\r\n        \"--user-agent=Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.132 Safari/537.36\",\r\n      ],\r\n    });\r\n    page = await browser.newPage();\r\n\r\n    page.setDefaultNavigationTimeout(35000);\r\n\r\n    const results = []; // collects all results\r\n\r\n    await page.tracing.start({\r\n      categories: [\"devtools.\"],\r\n      path: \"./trace.json\",\r\n    });\r\n    page.on(\"request\", (request) => {\r\n      if (request.url().includes(\"/embed\")) headersID = request.url();\r\n      if (request.url().includes(\"/master.m3u8\")) m3u8List = request.url();\r\n      if (!headersID && request.url().includes(\"/master.m3u8\")) headersID = request.headers()?.referer;\r\n    });\r\n   \r\n\r\n    await page.goto(url, { waitUntil: \"networkidle2\" });\r\n\r\n    if(!m3u8List){\r\n      const playerSrc = await page.evaluate(() => {\r\n      \r\n        try {\r\n        \r\n          return player ? player.getConfig().sources[0].file : false;\r\n        } catch (err) {\r\n          return false;\r\n        }\r\n      });\r\n      console.log('Player:',playerSrc)\r\n    if(playerSrc)\r\n          m3u8List = playerSrc\r\n  }\r\n\r\n  let period = 1000;\r\n  let rd = await detectElementNode({ m3u8List, headersID }, period, 10000);\r\n\r\n    console.log({ m3u8List, headersID });\r\n    return { m3u8List, headersID: headersID ? headersID : url };\r\n  } catch (error) {\r\n    console.log(\"scrapeSerie::ERROR->\", error);\r\n    return false;\r\n  } finally {\r\n    page?.close();\r\n    browser?.close();\r\n  }\r\n}\r\n\r\nasync function proxyM3U8(url, headers, res) {\r\n  const newHeaders = headers;\r\n  newHeaders[\"Accept-Encoding\"] = \"gzip, deflate, br\";\r\n  newHeaders[\"User-Agent\"] =\r\n    \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.132 Safari/537.36\";\r\n  \r\n  let req = await axios(url, {\r\n    headers: newHeaders,\r\n  }).catch((err) => {\r\n    console.log(\"axios\", err.message);\r\n    return null;\r\n  });\r\n\r\n  if (!req) return;\r\n\r\n  const m3u8 = req && req?.data;\r\n\r\n  if (m3u8.includes(\"RESOLUTION=\")) {\r\n    // Deals with the master m3u8 and replaces all sub-m3u8 files (quality m3u8 files basically) to use the m3u8 proxy.\r\n    // So if there is 360p, 480p, etc. Instead, the URL's of those m3u8 files will be replaced with the proxy URL.\r\n    const lines = m3u8.split(\"\\n\");\r\n    const newLines = [];\r\n    for (const line of lines) {\r\n      if (line.startsWith(\"#\")) {\r\n        if (line.startsWith(\"#EXT-X-KEY:\")) {\r\n          const regex = /https?:\\/\\/[^\\\"\"\\s]+/g;\r\n          const url = `${web_server_url}${\r\n            \"/ts-proxy?url=\" +\r\n            encodeURIComponent(regex.exec(line)?.[0] ?? \"\") +\r\n            \"&headers=\" +\r\n            encodeURIComponent(JSON.stringify(headers))\r\n          }`;\r\n          newLines.push(line.replace(regex, url));\r\n        } else {\r\n          newLines.push(line);\r\n        }\r\n      } else {\r\n        const uri = new URL(line, url);\r\n\r\n        newLines.push(\r\n          `${\r\n            web_server_url +\r\n            \"/m3u8-proxy?url=\" +\r\n            encodeURIComponent(uri.href) +\r\n            \"&headers=\" +\r\n            encodeURIComponent(JSON.stringify(headers))\r\n          }`\r\n        );\r\n      }\r\n    }\r\n\r\n    [\r\n      \"Access-Control-Allow-Origin\",\r\n      \"Access-Control-Allow-Methods\",\r\n      \"Access-Control-Allow-Headers\",\r\n      \"Access-Control-Max-Age\",\r\n      \"Access-Control-Allow-Credentials\",\r\n      \"Access-Control-Expose-Headers\",\r\n      \"Access-Control-Request-Method\",\r\n      \"Access-Control-Request-Headers\",\r\n      \"Origin\",\r\n      \"Vary\",\r\n      \"Referer\",\r\n      \"Server\",\r\n      \"x-cache\",\r\n      \"via\",\r\n      \"x-amz-cf-pop\",\r\n      \"x-amz-cf-id\",\r\n    ].map((header) => res.removeHeader(header));\r\n\r\n    // You need these headers so that the client recognizes the response as an m3u8.\r\n    res.setHeader(\"Content-Type\", \"application/vnd.apple.mpegurl\");\r\n    res.setHeader(\"Access-Control-Allow-Origin\", \"*\");\r\n    res.setHeader(\"Access-Control-Allow-Headers\", \"*\");\r\n    res.setHeader(\"Access-Control-Allow-Methods\", \"*\");\r\n\r\n    res.end(newLines.join(\"\\n\"));\r\n    return;\r\n  } else {\r\n    // Deals with each individual quality. Replaces the TS files with the proxy URL.\r\n    const lines = m3u8.split(\"\\n\");\r\n    const newLines = [];\r\n    for (const line of lines) {\r\n      if (line.startsWith(\"#\")) {\r\n        if (line.startsWith(\"#EXT-X-KEY:\")) {\r\n          const regex = /https?:\\/\\/[^\\\"\"\\s]+/g;\r\n          const url = `${web_server_url}${\r\n            \"/ts-proxy?url=\" +\r\n            encodeURIComponent(regex.exec(line)?.[0] ?? \"\") +\r\n            \"&headers=\" +\r\n            encodeURIComponent(JSON.stringify(headers))\r\n          }`;\r\n          newLines.push(line.replace(regex, url));\r\n        } else {\r\n          newLines.push(line);\r\n        }\r\n      } else {\r\n        const uri = new URL(line, url);\r\n        // CORS is needed since the TS files are not on the same domain as the client.\r\n        // This replaces each TS file to use a TS proxy with the headers attached.\r\n        // So each TS request will use the headers inputted to the proxy\r\n        newLines.push(\r\n          `${web_server_url}${\r\n            \"/ts-proxy?url=\" +\r\n            encodeURIComponent(uri.href) +\r\n            \"&headers=\" +\r\n            encodeURIComponent(JSON.stringify(headers))\r\n          }`\r\n        );\r\n      }\r\n    }\r\n\r\n    // Removes headers that are not needed for the client.\r\n    [\r\n      \"Access-Control-Allow-Origin\",\r\n      \"Access-Control-Allow-Methods\",\r\n      \"Access-Control-Allow-Headers\",\r\n      \"Access-Control-Max-Age\",\r\n      \"Access-Control-Allow-Credentials\",\r\n      \"Access-Control-Expose-Headers\",\r\n      \"Access-Control-Request-Method\",\r\n      \"Access-Control-Request-Headers\",\r\n      \"Origin\",\r\n      \"Vary\",\r\n      \"Referer\",\r\n      \"Server\",\r\n      \"x-cache\",\r\n      \"via\",\r\n      \"x-amz-cf-pop\",\r\n      \"x-amz-cf-id\",\r\n    ].map((header) => res.removeHeader(header));\r\n\r\n    // You need these headers so that the client recognizes the response as an m3u8.\r\n    res.setHeader(\"Content-Type\", \"application/vnd.apple.mpegurl\");\r\n    res.setHeader(\"Access-Control-Allow-Origin\", \"*\");\r\n    res.setHeader(\"Access-Control-Allow-Headers\", \"*\");\r\n    res.setHeader(\"Access-Control-Allow-Methods\", \"*\");\r\n\r\n    res.end(newLines.join(\"\\n\"));\r\n    return;\r\n  }\r\n}\r\n\r\nasync function proxyTs(url, headers, req, res) {\r\n  // I love how NodeJS HTTP request client only takes http URLs :D It's so fun!\r\n  // I'll probably refactor this later.\r\n\r\n  let forceHTTPS = false;\r\n\r\n  if (url.startsWith(\"https://\")) {\r\n    forceHTTPS = true;\r\n  }\r\n\r\n  const uri = new URL(url);\r\n\r\n  // Options\r\n  // It might be worth adding ...req.headers to the headers object, but once I did that\r\n  // the code broke and I receive errors such as \"Cannot access direct IP\" or whatever.\r\n  const options = {\r\n    hostname: uri.hostname,\r\n    port: uri.port,\r\n    path: uri.pathname + uri.search,\r\n    method: req.method,\r\n    headers: {\r\n      \"User-Agent\":\r\n        \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.132 Safari/537.36\",\r\n      ...headers,\r\n    },\r\n  };\r\n\r\n  // Proxy request and pipe to client\r\n  try {\r\n    if (forceHTTPS) {\r\n      const proxy = https.request(options, (r) => {\r\n        r.headers[\"content-type\"] = \"video/mp2t\";\r\n        res.writeHead(r.statusCode ?? 200, r.headers);\r\n\r\n        r.pipe(res, {\r\n          end: true,\r\n        });\r\n      });\r\n\r\n      req.pipe(proxy, {\r\n        end: true,\r\n      });\r\n    } else {\r\n      const proxy = http.request(options, (r) => {\r\n        r.headers[\"content-type\"] = \"video/mp2t\";\r\n        res.writeHead(r.statusCode ?? 200, r.headers);\r\n\r\n        r.pipe(res, {\r\n          end: true,\r\n        });\r\n      });\r\n      req.pipe(proxy, {\r\n        end: true,\r\n      });\r\n    }\r\n  } catch (e) {\r\n    res.writeHead(500);\r\n    res.end(e.message);\r\n    return null;\r\n  }\r\n}\r\n\r\napp.options(\"/scrapeEvent\", cors(corsOptionsDelegate));\r\napp.post(\"/scrapeEvent\", cors(corsOptionsDelegate), async (req, res) => {\r\n  console.log(\"API->/scrapeEvent\");\r\n  const { choice } = req.body;\r\n  const uri = new URL(req.url ?? web_server_url, \"http://localhost:8080\");\r\n  let result = {};\r\n  try {\r\n    if (choice == \"sport\")\r\n      {\r\n        if(req.url.includes('calcio.quest'))\r\n          result = await scrapeSportB(uri.searchParams.get(\"url\"));\r\n          else\r\n        result = await scrapeSportA(uri.searchParams.get(\"url\"));\r\n      }\r\n    else if (choice == \"film\")\r\n      result = await scrapeFilm(uri.searchParams.get(\"url\"));\r\n    else\r\n    result = await scrapeSerie(uri.searchParams.get(\"url\"));\r\n  } catch (e) {\r\n    res.writeHead(500);\r\n    console.log(`scrape::ERROR->`, e.message);\r\n    res.end(JSON.stringify(result));\r\n    return;\r\n  }\r\n\r\n  const { m3u8List, headersID } = result;\r\n  res.json({ m3u8List, headersID });\r\n  return;\r\n});\r\n\r\napp.options(\"/scrapeEvents\", cors(corsOptionsDelegate));\r\napp.post(\"/scrapeEvents\", cors(corsOptionsDelegate), async (req, res) => {\r\n  try {\r\n    console.log(\"API->/scrapeEvents\");\r\n    const { word, choice } = req.body;\r\n    let result = {};\r\n    try {\r\n      result =\r\n        choice && choice == \"sport\"\r\n          ? await scrapeSports(word)\r\n          : choice && choice == \"film\"\r\n          ? await scrapeFilms(word)\r\n          : await scrapeSeries(word);\r\n    } catch (e) {\r\n      res.writeHead(500);\r\n      console.log(`scrape::ERROR->`, e.message);\r\n      res.end(JSON.stringify({}));\r\n      return;\r\n    }\r\n\r\n    const { events_list } = result;\r\n    res.json({ events_list });\r\n\r\n    return;\r\n  } catch (err) {\r\n    console.log(err.message);\r\n  }\r\n});\r\n\r\napp.options(\"/openSerie\", cors(corsOptionsDelegate));\r\napp.post(\"/openSerie\", cors(corsOptionsDelegate), async (req, res) => {\r\n  try {\r\n    console.log(\"API->/openSerie\");\r\n    const { pageLink } = req.body;\r\n    let result = {};\r\n    try {\r\n      result = await openSerie({ pageLink });\r\n    } catch (e) {\r\n      res.writeHead(500);\r\n      console.log(`scrape::ERROR->`, e.message);\r\n      res.end(JSON.stringify({}));\r\n      return;\r\n    }\r\n\r\n    const { events_list } = result;\r\n    res.json({ events_list });\r\n\r\n    return;\r\n  } catch (err) {\r\n    console.log(err.message);\r\n  }\r\n});\r\n\r\napp.options(\"/openFilm\", cors(corsOptionsDelegate));\r\napp.post(\"/openFilm\", cors(corsOptionsDelegate), async (req, res) => {\r\n  try {\r\n    console.log(\"API->/openFilm\");\r\n    const { pageLink } = req.body;\r\n    let result = {};\r\n    try {\r\n      result = await openFilm({ pageLink });\r\n    } catch (e) {\r\n      res.writeHead(500);\r\n      console.log(`scrape::ERROR->`, e.message);\r\n      res.end(JSON.stringify({}));\r\n      return;\r\n    }\r\n\r\n    const { events_list } = result;\r\n    res.json({ events_list });\r\n\r\n    return;\r\n  } catch (err) {\r\n    console.log(err.message);\r\n  }\r\n});\r\n\r\napp.get(\"/m3u8-proxy\", (req, res) => {\r\n  const uri = new URL(req.url ?? web_server_url, \"http://localhost:8080\");\r\n  let headers = {};\r\n\r\n  try {\r\n    headers = JSON.parse(uri.searchParams.get(\"headers\") ?? \"{}\");\r\n  } catch (e) {\r\n    res.writeHead(500);\r\n\r\n    res.end(e.message);\r\n    return;\r\n  }\r\n  const url = uri.searchParams.get(\"url\");\r\n\r\n  return proxyM3U8(url ?? \"\", headers, res);\r\n});\r\n\r\napp.get(\"/ts-proxy\", async (req, res) => {\r\n  const uri = new URL(req.url ?? web_server_url, \"http://localhost:8080\");\r\n  let headers = {};\r\n  try {\r\n    headers = JSON.parse(uri.searchParams.get(\"headers\") ?? \"{}\");\r\n  } catch (e) {\r\n    res.writeHead(500);\r\n    res.end(e.message);\r\n    return;\r\n  }\r\n  const url = uri.searchParams.get(\"url\");\r\n  return proxyTs(url ?? \"\", headers, req, res);\r\n});\r\n\r\nconst encryptData = async (data) => {\r\n  try {\r\n    const { PUBLIC_KEY } = process.env;\r\n    if (PUBLIC_KEY)\r\n      /*  return await CryptoJS.AES.encrypt(\r\n        JSON.stringify(data),\r\n        PUBLIC_KEY\r\n      ).toString(); */\r\n      return await CryptoJS.AES.encrypt(\r\n        JSON.stringify(data),\r\n        PUBLIC_KEY\r\n      ).toString();\r\n    return false;\r\n  } catch (err) {\r\n    return false;\r\n  }\r\n};\r\n\r\nconst decryptData = async (data) => {\r\n  try {\r\n    const { PUBLIC_KEY } = process.env;\r\n    if (PUBLIC_KEY) {\r\n      /*  const dataCipher = CryptoJS.AES.decrypt(data, PUBLIC_KEY);\r\n      return await JSON.parse(dataCipher.toString(CryptoJS.enc.Utf8)); */\r\n\r\n      const decrypted = await CryptoJS.AES.decrypt(data, PUBLIC_KEY);\r\n      return await JSON.parse(decrypted.toString(CryptoJS.enc.Utf8));\r\n    }\r\n    return false;\r\n  } catch (err) {\r\n    console.log(err.message);\r\n    return false;\r\n  }\r\n};\r\n\r\napp.post(\"/login\", cors(corsOptionsDelegate), async (req, res) => {\r\n  console.log(\"API->/login\");\r\n  const { OPTIONS } = process.env;\r\n  try {\r\n    const { dataProfile } = req.body;\r\n    console.log(dataProfile);\r\n\r\n    const resultDecrypted = await decryptData(dataProfile);\r\n\r\n    if (resultDecrypted) {\r\n      const { username, password } = resultDecrypted;\r\n      console.log(\"Login data recived:\", {\r\n        dataCipher: resultDecrypted,\r\n        username,\r\n        password,\r\n      });\r\n      console.log(\r\n        \"Login data stored:\",\r\n        process.env.PROFILE_USERNAME,\r\n        process.env.PROFILE_PASSWORD\r\n      );\r\n      if (!username || !password) throw new Error(\"Missing data\");\r\n      if (\r\n        username != process.env.PROFILE_USERNAME ||\r\n        password != process.env.PROFILE_PASSWORD\r\n      )\r\n        throw new Error(\"Incorrect data\");\r\n      const resultEncrtypted = await encryptData({\r\n        username,\r\n        password,\r\n        options: JSON.parse(OPTIONS),\r\n      });\r\n      if (!resultDecrypted) throw new Error(\"Data corrupted\");\r\n      res.json({\r\n        data: resultEncrtypted,\r\n        error: false,\r\n      });\r\n    } else throw new Error(\"Data corrupted\");\r\n  } catch (err) {\r\n    res.json({ data: false, error: err.message });\r\n  }\r\n});\r\n\r\napp.get(\"/test\", cors(corsOptionsDelegate), (req, res) => {\r\n  console.log(\"API->/test\");\r\n  res.json({ message });\r\n});\r\n\r\napp.get(\"/resources\", cors(corsOptionsDelegate), async (req, res) => {\r\n  console.log(\"API->/reources\");\r\n  try {\r\n    const { AUTHORIZATION, SERVICE_TOKEN } = process.env;\r\n    if (AUTHORIZATION && SERVICE_TOKEN) {\r\n      const myHeaders = new Headers();\r\n      myHeaders.append(\"Content-Type\", \"application/json\");\r\n      myHeaders.append(\"Authorization\", `Bearer ${AUTHORIZATION}`);\r\n\r\n      const requestOptions = {\r\n        method: \"GET\",\r\n        headers: myHeaders,\r\n        redirect: \"follow\",\r\n      };\r\n\r\n      const year = new Date().getFullYear();\r\n      const month = new Date().getMonth() + 1;\r\n\r\n      const startTime = new Date(`${year}-${month}-01`).toISOString();\r\n\r\n      const bandwidth = await fetch(\r\n        `https://api.render.com/v1/metrics/bandwidth?startTime=${startTime}&resource=${SERVICE_TOKEN}`,\r\n        requestOptions\r\n      )\r\n        .then((response) => response.json())\r\n        .catch((error) => console.error(error));\r\n      if (!bandwidth) throw new Error(\"Data bandwidth undefined\");\r\n\r\n      const values = await bandwidth\r\n        ?.shift()\r\n        ?.values?.map((el) => el.value)\r\n        .reduce((sum, current) => sum + current, 0);\r\n      if (!values) throw new Error(\"Data values undefined\");\r\n      const residual_giga = await Number((values * 0.00097656259).toFixed(2));\r\n      console.log(\"API->/reources:residual_giga\", residual_giga);\r\n      res.json({ data: residual_giga, error: false });\r\n    }\r\n  } catch (err) {\r\n    console.log(err.message);\r\n    res.json({ data: false, error: err.message });\r\n  }\r\n});\r\n\r\napp.get(\"/img-proxy\", cors(corsOptionsDelegate), async (req, res) => {\r\n  console.log(\"API->/proxy\", `/proxy/${req.url.split(\"/img-proxy?\")[1]}`);\r\n  const host = process.env.PUBLIC_URL;\r\n  try {\r\n    let extractPath = req?.url?.split(\"/\");\r\n    extractPath?.shift();\r\n    const hostService = extractPath?.shift();\r\n    extractPath = extractPath?.join(\"/\");\r\n    let proxySubPath = hostService?.includes(\"eurostreaming\")\r\n      ? \"proxyEurostreamingImg\"\r\n      : false;\r\n    proxySubPath = hostService?.includes(\"altadefinizione\")\r\n      ? \"proxyAltadefinizioneImg\"\r\n      : proxySubPath;\r\n    let newHeaders = {};\r\n    newHeaders[\"Accept-Encoding\"] = \"gzip, deflate, br\"; \r\n    newHeaders[\"Content-Type\"] = \"image/jpeg\"; \r\n \r\n    const result = await axios(`${host}/${proxySubPath}/${extractPath}`, {\r\n      headers: newHeaders,\r\n      responseType: \"arraybuffer\",\r\n    })\r\n      .then((response) =>\r\n        Buffer.from(response.data, \"binary\").toString(\"base64\")\r\n      )\r\n      .catch((err) => {\r\n        console.log(\"axios\", err.message);\r\n        return null;\r\n      });\r\n\r\n    if (!result) throw new Error(\"img proxy error\");\r\n\r\n    res.json({ img_url: result });\r\n  } catch (err) {\r\n    res.json({ img_url: false });\r\n  }\r\n});\r\n\r\napp.get(\"*\", (req, res) => {\r\n  res.sendFile(path.resolve(__dirname, \"../dist/client\", \"index.html\"));\r\n});\r\n\r\napp.listen(PORT, () => {\r\n  console.log(`Server listening on ${colors.green(PORT)}`);\r\n});\r\n"],"names":["module","exports","message","require","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","value","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","_catch","delegateYield","asyncGeneratorStep","_asyncToGenerator","arguments","apply","_next","_throw","express","path","__dirname","m3u8List","headersID","bodyParser","cors","https","proxy","colors","axios","puppeteer","connect","CryptoJS","PORT","process","env","PORT_SERVER","app","host","HOST","port","web_server_url","PUBLIC_URL","concat","defaultTimeout","allowlist","WHITELIST","corsOptionsDelegate","req","callback","indexOf","header","origin","use","json","detectElementNode","data","breakPoint","period","breakTimeout","fnTest","setTimeout","reject","interval","setInterval","_callee","_callee$","_context","console","log","clearInterval","error","openSerie","_x","_openSerie","_callee12","params","browser","page","checkResult","resultSeason","objSerie","pageLink","events_list","_iterator","_step","season","episodes","_page","_browser","_callee12$","_context12","launch","headless","newPage","waitUntil","waitForSelector","timeout","el","err","$$eval","els","Array","from","map","num","innerText","href","split","_createForOfIteratorHelper","elem","tempList","querySelectorAll","assign","tel","_tel$dataset","_tel$dataset2","serie","id","title","dataset","tempSubList","links","tsel","_tsel$dataset","_tsel$dataset2","m","link","t0","close","t1","openFilm","_x2","_openFilm","_callee13","resultLinks","_iterator2","_step2","_link$data_link","_link$data_link2","_page2","_browser2","_callee13$","_context13","objFilm","args","$eval","src","_el$dataset","_el$dataset2","_el$dataset3","_el$dataset4","data_link","includes","scrapeSeries","_x3","_scrapeSeries","_callee14","result","_yield$connect","_page3","resulto","_callee14$","_context14","turnstile","disableXvfb","customConfig","connectOption","defaultViewport","plugins","setViewport","width","height","setUserAgent","nodeImg","querySelector","img","alt","nodeTitle","JSON","stringify","scrapeFilms","_x5","_scrapeFilms","_callee16","test","_page5","_browser5","_callee16$","_context16","evaluateOnNewDocument","navigator","get","race","_infoPlus","_infoPlus2","infoPlus","rate","genre","scrapeSports","_x6","_scrapeSports","_callee18","_preListSplitted","week","preList","preListSplitted","partList","_iterator3","_step3","ls","groups","group","_loop","_i","_partList","partGroups","_i2","_groups","_group2$channels","_group2","partChannels","partEvents","_i3","_partGroups","pt","_iterator4","_step4","_loop2","CHANNELS","tickets","getIndexDay","_page6","_browser6","_callee18$","_context20","isArray","at","startsWith","existDay","_group","_loop$","_context17","find","w","_el","toLowerCase","day","replace","toUpperCase","channels","events","filter","_el2","_el$","channel","language","trim","evaluate","groupBy","_ref12","ev","time","_tmpEv$","_tmpEv$2","tmpEv","_el$title","event","findChannel","_i4","_Object$entries","_Object$entries$_i","_value","_loop2$","_context18","entries","_slicedToArray","vl","t2","res","tckts","_el$querySelector","_el$querySelector2","_el$querySelector3","_ref13","_callee17","tkts","_callee17$","_context19","_el$title2","_x37","findIndex","Date","getDay","t3","scrapeSportA","_x7","_scrapeSportA","_callee19","url","rd","_browser7","_callee19$","_context21","setDefaultNavigationTimeout","tracing","start","categories","on","request","scrapeSportB","_x8","_scrapeSportB","_callee20","_browser8","_callee20$","_context22","_player","player","play","scrapeSerie","_x9","_scrapeSerie","_callee21","playerSrc","_page7","_browser9","_callee21$","_context23","_request$headers","headers","referer","getConfig","sources","file","scrapeFilm","_x11","_scrapeFilm","_callee24","_page9","_browser11","_callee24$","_context26","_request$headers2","_proxyM3U","_callee25","newHeaders","m3u8","lines","newLines","_iterator5","_step5","line","_regex$exec$","_regex$exec","regex","_url","uri","_lines","_newLines","_iterator6","_step6","_line","_regex$exec$2","_regex$exec2","_regex","_url2","_uri","_callee25$","_context27","encodeURIComponent","exec","URL","removeHeader","setHeader","end","join","proxyTs","_x15","_x16","_x17","_x18","_proxyTs","_callee26","forceHTTPS","options","_proxy","_proxy2","_callee26$","_context28","hostname","pathname","search","_objectSpread","_r$statusCode","writeHead","statusCode","pipe","http","_r$statusCode2","post","_ref2","_callee2","_req$url","choice","_result","_callee2$","_context2","body","searchParams","_x19","_x20","_ref3","_callee3","_req$body","word","_callee3$","_context3","_x21","_x22","_ref4","_callee4","_callee4$","_context4","_x23","_x24","_ref5","_callee5","_callee5$","_context5","_x25","_x26","_req$url2","_uri$searchParams$get","parse","proxyM3U8","_x12","_x13","_x14","_ref6","_callee6","_req$url3","_uri$searchParams$get2","_callee6$","_context6","_x27","_x28","encryptData","_ref7","_callee7","PUBLIC_KEY","_callee7$","_context7","AES","encrypt","toString","_x29","decryptData","_ref8","_callee8","decrypted","_callee8$","_context8","decrypt","enc","Utf8","_x30","_ref9","_callee9","OPTIONS","dataProfile","resultDecrypted","username","password","resultEncrtypted","_callee9$","_context9","dataCipher","PROFILE_USERNAME","PROFILE_PASSWORD","_x31","_x32","_ref10","_callee10","_process$env","AUTHORIZATION","SERVICE_TOKEN","_bandwidth$shift","myHeaders","requestOptions","year","month","startTime","bandwidth","residual_giga","_callee10$","_context10","Headers","append","redirect","getFullYear","getMonth","toISOString","fetch","response","shift","reduce","sum","current","Number","toFixed","_x33","_x34","_ref11","_callee11","_req$url4","_extractPath","_extractPath2","_extractPath3","extractPath","hostService","proxySubPath","_callee11$","_context11","responseType","Buffer","img_url","_x35","_x36","sendFile","listen","green"],"sourceRoot":""}